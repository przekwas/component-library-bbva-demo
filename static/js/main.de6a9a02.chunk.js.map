{"version":3,"sources":["assets/profile.jpg","components/shared/Header.jsx","components/layout/MainLayout.jsx","components/card/ProfileCard.jsx","components/transactions/TransactionRow.jsx","components/transactions/Transactions.jsx","components/nav/MainNav.jsx","components/nav/SideNavList.jsx","components/nav/SideNav.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","Jumbotron","className","role","aria-label","MainLayout","children","Row","ProfileCard","Col","md","Card","Img","src","require","alt","Body","Title","Text","TransactionRow","Transactions","Table","hover","responsive","Array","keys","map","num","key","MainNav","Navbar","bg","variant","expand","sticky","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","href","NavDropdown","title","Item","Divider","color","size","SideNavList","defaultActiveKey","SideNav","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de6a9a02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.a6acfb27.jpg\";","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n        <Jumbotron className=\"shadow-sm mt-2\">\r\n            <div className=\"display-4\">Totally BBVA <span role=\"img\" aria-label=\"ok hand\">üëå</span></div>\r\n        </Jumbotron>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst MainLayout = ({ children }) => {\r\n\treturn <Row className=\"justify-content-center\">{children}</Row>;\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst ProfileCard = () => {\r\n\treturn (\r\n\t\t<Col md={3}>\r\n\t\t\t<Card className=\"shadow-sm\">\r\n\t\t\t\t<Card.Img src={require('../../assets/profile.jpg')} alt=\"profile\" />\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>Luke Przekwas</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\tWhen I'm not coding I'm practicing Super Smash. Bros Melee{' '}\r\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"video game\">\r\n\t\t\t\t\t\t\tüéÆ\r\n\t\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t\tor playing World of Warcraft{' '}\r\n\t\t\t\t\t\t<span role=\"img\" aria-label=\"crossed swords\">\r\n\t\t\t\t\t\t\t‚öîÔ∏è\r\n\t\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t\tclassic!\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<Card.Text className=\"d-flex flex-wrap justify-content-start\">\r\n                        <span className=\"badge badge-dark badge-pill my-1 mr-1\">#Developer</span>\r\n                        <span className=\"badge badge-dark badge-pill my-1 mr-1\">#FoxMains</span>\r\n                        <span className=\"badge badge-dark badge-pill my-1 mr-1\">#HolyPaladins</span>\r\n                    </Card.Text>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</Col>\r\n\t);\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React from 'react';\r\n\r\nconst TransactionRow = () => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td>*1234</td>\r\n\t\t\t<td>Checking</td>\r\n\t\t\t<td>$999,999.00</td>\r\n\t\t\t<td>$999,999.00</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default TransactionRow;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport TransactionRow from './TransactionRow';\r\n\r\nconst Transactions = () => {\r\n\treturn (\r\n\t\t<Col md={7}>\r\n\t\t\t<Table hover responsive className=\"text-center\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Account</th>\r\n\t\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t\t<th>Posted Balance</th>\r\n\t\t\t\t\t\t<th>Available Balance</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{[...Array(8).keys()].map(num => (\r\n\t\t\t\t\t\t<TransactionRow key={num} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</Col>\r\n\t);\r\n};\r\n\r\nexport default Transactions;\r\n","import React from 'react';\r\nimport { FaPiggyBank, FaUserCircle } from 'react-icons/fa';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst MainNav = () => {\r\n\treturn (\r\n\t\t<Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\" className=\"shadow-sm\">\r\n\t\t\t<Navbar.Brand>\r\n\t\t\t\t<FaPiggyBank /> Bank NavBar Lol\r\n\t\t\t</Navbar.Brand>\r\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t<Nav.Link href=\"#home\">Country Roads</Nav.Link>\r\n\t\t\t\t\t<Nav.Link href=\"#link\">Take Me Home</Nav.Link>\r\n\t\t\t\t\t<NavDropdown title=\"To The Place\" id=\"basic-nav-dropdown\">\r\n\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.1\">I belong</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">West Virginia</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.3\">mountain mama</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Divider />\r\n\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.4\">Take me home, country roads</NavDropdown.Item>\r\n\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t</Nav>\r\n\t\t\t\t<Navbar.Text>\r\n\t\t\t\t\t<FaUserCircle color=\"white\" size=\"1.5rem\" className=\"mr-1\" />\r\n\t\t\t\t\t<a href=\"#login\">Luke Przekwas</a>\r\n\t\t\t\t</Navbar.Text>\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n\r\nexport default MainNav;\r\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst SideNavList = ({ children }) => {\r\n\treturn (\r\n\t\t<Nav defaultActiveKey=\"/home\" className=\"flex-column border rounded shadow-sm mb-3\">\r\n\t\t\t{children}\r\n\t\t</Nav>\r\n\t);\r\n};\r\n\r\nexport default SideNavList;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport SideNavList from './SideNavList';\r\n\r\nconst SideNav = () => {\r\n\treturn (\r\n\t\t<Col md={2}>\r\n\t\t\t<SideNavList>\r\n\t\t\t\t<p className=\"text-center\">Links</p>\r\n\t\t\t\t<Nav.Link>Home</Nav.Link>\r\n\t\t\t\t<Nav.Link>Profile</Nav.Link>\r\n\t\t\t\t<Nav.Link>Somewhere Else</Nav.Link>\r\n\t\t\t\t<Nav.Link>Elsewhere</Nav.Link>\r\n\t\t\t</SideNavList>\r\n\t\t\t<SideNavList>\r\n\t\t\t\t<p className=\"text-center\">Add Products</p>\r\n\t\t\t\t<Nav.Link>Product</Nav.Link>\r\n\t\t\t\t<Nav.Link>Other Product</Nav.Link>\r\n\t\t\t</SideNavList>\r\n\t\t\t<SideNavList>\r\n\t\t\t\t<p className=\"text-center\">Settings</p>\r\n\t\t\t\t<Nav.Link>Personal</Nav.Link>\r\n\t\t\t\t<Nav.Link>Address</Nav.Link>\r\n\t\t\t\t<Nav.Link>Password</Nav.Link>\r\n\t\t\t\t<Nav.Link>Accounts</Nav.Link>\r\n\t\t\t</SideNavList>\r\n\t\t</Col>\r\n\t);\r\n};\r\n\r\nexport default SideNav;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Header from './components/shared/Header';\r\nimport MainLayout from './components/layout/MainLayout';\r\nimport ProfileCard from './components/card/ProfileCard';\r\nimport Transactions from './components/transactions/Transactions';\r\nimport MainNav from './components/nav/MainNav';\r\nimport SideNav from './components/nav/SideNav';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<MainNav />\r\n\t\t\t<Container>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<MainLayout>\r\n\t\t\t\t\t<ProfileCard />\r\n\t\t\t\t\t<Transactions />\r\n\t\t\t\t\t<SideNav />\r\n\t\t\t\t</MainLayout>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}